---
- name: Install dependent packages(RedHat).
  yum: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
  become: yes
  with_items: "{{ kcl_python_dependent_packages }}"
  when: ansible_os_family == 'RedHat' and kcl_python_dependent_packages|length > 0
- name: Install dependent packages(Darwin).
  homebrew_cask: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('present') }}
  with_items: "{{ kcl_python_dependent_packages }}"
  when: ansible_os_family == 'Darwin' and kcl_python_dependent_packages|length > 0
  environment: 
    HOMEBREW_CASK_OPTS: "{{ homebrew_cask_options }}"

- name: Install Kcl/Py packages.
  pip: >
    name={{ item }}
    state=latest
  with_items: "{{ kcl_python_install_packages }}"
  environment:
    PATH: "{{ kcl_python_bin_directory }}:{{ ansible_env.PATH }}"
  when: kcl_python_install_packages|length > 0

- name: Create Kcl/Py directory.
  file: >
    path="{{ kcl_python_directory }}"
    state=directory
    owner="{{ kcl_python_user }}"
    group="{{ kcl_python_group }}"
    mode=0755
  become: yes

- name: Create executable file.
  template: >
    src=kcl.py.tpl
    dest="{{ kcl_python_directory }}/{{ kcl_python_executable_file_name }}"
    owner="{{ kcl_python_user }}"
    group="{{ kcl_python_group }}"
    mode=0644

- name: Create properties file.
  template: >
    src=kcl.properties.tpl
    dest="{{ kcl_python_directory }}/{{ kcl_python_properties_file_name }}"
    owner="{{ kcl_python_user }}"
    group="{{ kcl_python_group }}"
    mode=0644

- name: java binary.
  shell: >
    which java 
  register: java_path  
  changed_when: false  
  always_run: yes
- name: Print start-up command.
  shell: >
    amazon_kclpy_helper.py --print_command --java {{ java_path.stdout }} --properties {{ kcl_python_directory }}/{{ kcl_python_properties_file_name }}
  register: startup_command  
  changed_when: false  
  always_run: yes
  environment:
    PATH: "{{ kcl_python_bin_directory }}:{{ ansible_env.PATH }}"


- name: Create supervisord process conf file.
  template: >
    src=supervisord.conf.tpl
    dest={{ supervisord_include_conf_directory }}/kcl_py.conf
    owner="{{ kcl_python_user }}"
    group="{{ kcl_python_user }}"
    mode=0644