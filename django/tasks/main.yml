---
- name: Install/Upgrade dependent packages(RedHat).
  yum: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
  with_items: "{{ django_dependent_packages }}"
  when: ansible_os_family == 'RedHat' and django_dependent_packages|length > 0
  become: yes

- name: Install django packages.
  pip: >
    name={{ item }}
    state=latest
  with_items: "{{ django_install_packages }}"
  environment:
    PATH: "{{ django_python_bin_directory }}:{{ ansible_env.PATH }}"
  when: django_install_packages|length > 0

- name: Clone project directory.
  git: >
    repo="{{ django_repository }}"
    dest="{{ django_directory }}/{{ django_project }}"
    update=yes
    accept_hostkey=yes
  when: django_repository != ''

- name: Project Directory.
  stat: >
    path="{{ django_directory }}/{{ django_project }}"
  register: django_project_dir
  changed_when: no
  always_run: yes
- name: Create project directory(custom template).
  command: >
    django-admin startproject --template={{ django_project_template_repository }} {{ django_project }}
  args:
    chdir: "{{ django_directory }}"
    creates: "{{ django_directory }}/{{ django_project }}"
  environment:
    PATH: "{{ django_python_bin_directory }}:{{ ansible_env.PATH }}"
  when: not django_project_dir.stat.exists and django_repository == '' and django_project_template_repository
- name: Create project directory(default).
  command: >
    django-admin startproject {{ django_project }}
  args:
    chdir: "{{ django_directory }}"
    creates: "{{ django_directory }}/{{ django_project }}"
  environment:
    PATH: "{{ django_python_bin_directory }}:{{ ansible_env.PATH }}"
  when: not django_project_dir.stat.exists and django_repository == '' and not django_project_template_repository

- name: Clone app directory.
  git: >
    repo="{{ django_app_repository }}"
    dest="{{ django_directory }}/{{ django_project }}/{{ django_app }}"
    update=yes
    track_submodules=yes
    accept_hostkey=yes
  environment:
    PATH: "{{ django_python_bin_directory }}:{{ ansible_env.PATH }}"
  when: django_app_repository != ''

- name: App Directory.
  stat: >
    path="{{ django_directory }}/{{ django_project }}/{{ django_app }}"
  register: django_app_dir
  changed_when: no
  always_run: yes
- name: Create app directory(custom template).
  command: >
    python manage.py startapp --template={{ django_app_template_repository }} {{ django_app }}
  args:
    chdir: "{{ django_directory }}/{{ django_project }}"
    creates: "{{ django_directory }}/{{ django_project }}/{{ django_app }}"
  environment:
    PATH: "{{ django_python_bin_directory }}:{{ ansible_env.PATH }}"
  when: not django_app_dir.stat.exists and django_app_repository == '' and django_app_template_repository
- name: Create app directory(default).
  command: >
    python manage.py startapp {{ django_app }}
  args:
    chdir: "{{ django_directory }}/{{ django_project }}"
    creates: "{{ django_directory }}/{{ django_project }}/{{ django_app }}"
  environment:
    PATH: "{{ django_python_bin_directory }}:{{ ansible_env.PATH }}"
  when: not django_app_dir.stat.exists and django_app_repository == '' and not django_app_template_repository

- name: Change django project directory owner.
  file: >
    path="{{ django_directory }}/{{ django_project }}"
    state=directory
    recurse=yes
    owner={{ django_user }}
    group={{ django_group }}
  become: yes

- name: Create django log directory.
  file: >
    path="{{ django_log_directory }}"
    state=directory
    owner="{{ django_user }}"
    group="{{ django_group }}"
    mode=0755
  become: yes

- name: Create django db directory.
  file: >
    path="{{ django_db_directory }}"
    state=directory
    owner="{{ django_user }}"
    group="{{ django_group }}"
    mode=0755
  when: django_db_directory != ''
  become: yes

- name: Create supervisord process conf file.
  template: >
    src=django.conf.tpl
    dest={{ supervisord_include_conf_directory }}/django.conf
    owner="{{ django_user }}"
    group="{{ django_group }}"
    mode=0644
  become: yes
