---
- name: user list.
  shell: >
    cut -d: -f1 /etc/passwd
  register: user_list
  changed_when: false
  always_run: yes
  when: ansible_os_family != 'Darwin'
- name: Create neovim user.
  user: >
    name="{{ neovim_user }}"
    shell=/bin/false
    system=yes
    home="{{ neovim_prefix }}"
    createhome=no
  when: ansible_os_family != 'Darwin' and user_list.stdout_lines.count(neovim_user) < 1
  become: yes

- name: neovim binary.
  command: >
    which nvim
  register: neovim_bin
  ignore_errors: yes
  changed_when: no
  always_run: yes
- name: Install neovim(Darwin).
  homebrew: >
    name=neovim/neovim/neovim
    state=latest
  when: ansible_os_family == 'Darwin' and direnv_bin.rc == 1

- name: Install/Upgrade dependent packages(RedHat).
  yum: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
  with_items: "{{ neovim_dependent_packages }}"
  when: ansible_os_family == 'RedHat' and neovim_dependent_packages|length > 0
  become: yes

- name: Create work directory.
  file: >
    path="{{ neovim_work_directory }}"
    state=directory
    owner="{{ neovim_user }}"
    group="{{ neovim_group }}"
    mode=0755
  when: ansible_os_family != 'Darwin'
  become: yes

- name: Clone neovim repository.
  git: >
    repo={{ neovim_repository }}
    dest={{ neovim_work_directory }}/neovim
    update=yes
    accept_hostkey=yes
    force=yes
  when: ansible_os_family != 'Darwin'

- name: Make and Install neovim.
  shell: "{{ item }}"
  args:
    chdir: "{{ neovim_work_directory }}/neovim"
  with_items:
    - make CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX:PATH={{ neovim_prefix }}"
    - make install
  when: ansible_os_family != 'Darwin'

- name: Remove work directory.
  file: >
    path="{{ neovim_work_directory }}"
    state=absent
  become: yes
  when: ansible_os_family != 'Darwin'

- name: Create XDG config directory.
  file: >
    path="{{ neovim_config_directory }}"
    state=directory
    mode=0755

- name: Download init.vim from vim-bootstrap.com.
  uri: >
    url="{{ neovim_bootstrap_url }}"
    method=POST
    body="langs={{ neovim_bootstrap_langs | join('&langs=') }}&editor=nvim"
    HEADER_Content-Type=application/x-www-form-urlencoded
    dest="{{ neovim_config_directory }}/init.vim"

- name: Replace path of init.vim.
  replace: >
    dest={{ neovim_config_directory }}/init.vim
    replace="$PROJECT_HOME/.config"
    regexp='\~/\.config'

- name: Replace session path of init.vim.
  replace: >
    dest={{ neovim_config_directory }}/init.vim
    replace="expand("$PROJECT_HOME/.config/nvim/session")"
    regexp='"\$PROJECT_HOME/\.config/nvim/session"'

- name: Insert env in .envrc.
  lineinfile: >
    dest={{ neovim_envrc_directory }}/.envrc
    line="{{ item.value }}"
    insertafter=EOF
    state=present
    regexp={{ item.regexp }}
  with_items: "{{ neovim_environment_variables }}"
  when: ansible_os_family != 'Darwin' and neovim_envrc_directory != '' and neovim_environment_variables|length > 0


