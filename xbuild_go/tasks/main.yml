---
- name: Go directory.
  stat: >
    path={{ xbuild_go_install_directory }}
  register: go_directory
  changed_when: no
  always_run: yes
- name: Install go in xbuild.
  command: >
    {{ xbuild_install_directory }}/go-install {{ xbuild_go_version }}
    {{ xbuild_go_install_directory }} {{ xbuild_go_os }} {{ xbuild_go_arch }}
  when: not go_directory.stat.exists
  become: yes

- name: Change go directory owner.
  file: >
    path={{ xbuild_go_install_directory }}
    state=directory
    recurse=yes
    owner={{ xbuild_go_user }}
    group={{ xbuild_go_group }}
  become: yes

- name: Source directory.
  file: >
    path="{{ xbuild_go_source_directory }}"
    state=directory
    owner="{{ xbuild_go_user }}"
    group="{{ xbuild_go_group }}"
    mode=0755
  become: yes

- name: Binary directory.
  file: >
    path="{{ xbuild_go_binary_directory }}"
    state=directory
    owner="{{ xbuild_go_user }}"
    group="{{ xbuild_go_group }}"
    mode=0755
  become: yes

- name: Install go packages.
  shell: >
    {{ xbuild_go_install_directory }}/bin/go install {{ item }}
  with_items: "{{ xbuild_go_packages }}"
  environment:
    GOROOT: "{{ xbuild_go_install_directory }}"
    GOPATH: "{{ project_directory }}/app"
  when: xbuild_go_packages|length > 0
  become: yes

- name: Insert env in .envrc.
  lineinfile: >
    dest={{ xbuild_go_envrc_directory }}/.envrc
    line="{{ item.value }}"
    insertafter=EOF
    state=present
    regexp={{ item.regexp }}
  with_items: "{{ xbuild_go_environment_variables }}"
  when: xbuild_go_envrc_directory != '' and xbuild_go_environment_variables|length > 0

- name: Remove xbuild directory.
  file: >
    path={{ xbuild_install_directory }}
    state=absent
  when: xbuild_go_remove_xbuild
  become: yes
