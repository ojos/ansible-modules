---
- name: Install ansible.
  command: >
    {{ xbuild_ansible_python_bin_directory }}/pip install -U ansible

- name: Create ansible directory.
  file: >
    path="{{ xbuild_ansible_directory }}"
    state=directory
    mode=0755
  become: yes

- name: Create default roles directory.
  file: >
    path="{{ xbuild_ansible_directory }}/roles"
    state=directory
    mode=0755
  become: yes

- name: Clone Default roles repository.
  git: >
    repo="{{ xbuild_ansible_roles_repository }}"
    dest="{{ xbuild_ansible_directory }}/roles"
    update=yes
    force=yes
    track_submodules=yes
    accept_hostkey=yes
  when: xbuild_ansible_roles_repository != ''
  become: yes

- name: Buildout playbook.
  stat: >
    path="{{ xbuild_ansible_directory }}/{{ xbuild_ansible_buildout_playbook_file_name }}"
  register: buildout
  changed_when: no
  always_run: yes
- name: Create buildout playbook.
  copy: >
    src=buildout.yml
    dest="{{ xbuild_ansible_directory }}/{{ xbuild_ansible_buildout_playbook_file_name }}"
    mode=0644
  when: not buildout.stat.exists
  become: yes

- name: Deploy playbook.
  stat: >
    path="{{ xbuild_ansible_directory }}/{{ xbuild_ansible_deploy_playbook_file_name }}"
  register: deploy_playbook
  changed_when: no
  always_run: yes
- name: Create deploy playbook.
  copy: >
    src=deploy.yml
    dest="{{ xbuild_ansible_directory }}/{{ xbuild_ansible_deploy_playbook_file_name }}"
    mode=0644
  when: not deploy_playbook.stat.exists
  become: yes

- name: Restart playbook.
  stat: >
    path="{{ xbuild_ansible_directory }}/{{ xbuild_ansible_restart_playbook_file_name }}"
  register: restart_playbook
  changed_when: no
  always_run: yes
- name: Create restart playbook.
  copy: >
    src=restart.yml
    dest="{{ xbuild_ansible_directory }}/{{ xbuild_ansible_restart_playbook_file_name }}"
    mode=0644
  when: not restart_playbook.stat.exists
  become: yes

- name: Download buildout script.
  get_url: >
    url="{{ xbuild_ansible_buildout_script_url }}"
    dest="{{ xbuild_ansible_buildout_script }}"
    mode=755
    force=yes
  become: yes

- name: Change ansible directory owner.
  file: >
    path="{{ xbuild_ansible_directory }}"
    state=directory
    recurse=yes
    owner={{ xbuild_ansible_user }}
    group={{ xbuild_ansible_group }}
  become: yes

- name: Insert env in .envrc.
  lineinfile: >
    dest={{ xbuild_ansible_envrc_directory }}/.envrc
    line="{{ item.value }}"
    insertafter=EOF
    state=present
    regexp={{ item.regexp }}
  with_items: xbuild_ansible_environment_variables
  when: xbuild_ansible_envrc_directory != '' and xbuild_ansible_environment_variables|length > 0
