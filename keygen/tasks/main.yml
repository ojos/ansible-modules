---
- name: Key directory.
  stat: >
    path={{ keygen_key_directory }}
  register: key_directory
  changed_when: no
  always_run: yes
- name: Create key directory.
  file: >
    path="{{ keygen_key_directory }}"
    state=directory
    recurse=yes
    owner={{ keygen_user }}
    group={{ keygen_group }}
    mode=0755
  when: not key_directory.stat.exists
  become: yes

- name: Generate ssh key.
  command: >
    ssh-keygen -t {{ keygen_type }} -b {{ keygen_bits }} -f {{ keygen_key_directory }}/{{ item }}.pem -N '{{ keygen_passphrase }}'
  args:
    creates: "{{ keygen_key_directory }}/{{ item }}.pem"
  with_items: keygen_environments
  when: keygen_environments|length > 0

- name: SSH config.
  stat: >
    path={{ keygen_key_directory }}/ssh_config
  register: ssh_config
  changed_when: no
  always_run: yes
- name: Copy ssh_config.
  file: >
    src={{ keygen_ssh_config_file }}
    path="{{ keygen_key_directory }}/ssh_config"
    state=file
    owner={{ keygen_user }}
    group={{ keygen_group }}
    mode=0644
  when: not ssh_config.stat.exists
  become: yes

- name: Insert env in .envrc.
  lineinfile: >
    dest={{ keygen_envrc_directory }}/.envrc
    line="{{ item.value }}"
    insertafter=EOF
    state=present
    regexp={{ item.regexp }}
  with_items: keygen_environment_variables
  when: keygen_envrc_directory != '' and keygen_environment_variables|length > 0
