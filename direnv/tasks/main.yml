---
- name: direnv binary.
  command:       which direnv
  register:      direnv_bin
  ignore_errors: yes
  changed_when:  no
  check_mode:    no

- name: i386.
  when: 
    - "direnv_bin.rc == 1"
    - "ansible_architecture == 'i386'"
  set_fact:
    _arch: '386'

- name: x86_64.
  when: 
    - "direnv_bin.rc == 1"
    - "ansible_architecture == 'x86_64'"
  set_fact:
    _arch: 'amd64'

- name: Download direnv(Windows).
  become: yes
  when:   
    - "direnv_bin.rc == 1"
    - "ansible_os_family == 'Windows'"
  get_url:
    url:  "{{ direnv_download_url }}/v{{ direnv_version }}/direnv.{{ ansible_system|lower }}-{{ _arch }}"
    dest: "{{ direnv_install_directory }}/direnv"
    mode: 0775

- name: Download direnv(exclude Windows).
  become: yes
  when:   
    - "direnv_bin.rc == 1"
    - "ansible_os_family != 'Windows'"
  get_url:
    url:  "{{ direnv_download_url }}/v{{ direnv_version }}/direnv.{{ ansible_system|lower }}-{{ _arch }}.exe"
    dest: "{{ direnv_install_directory }}/direnv"
    mode: 0775

- name: .bashrc file.
  when:     "ansible_env.SHELL is match('bash')"
  register: bash_file
  stat:
    path: "{{ ansible_user_dir }}/.bashrc"
  

- name: Create .bashrc file.
  when: 
    - "ansible_env.SHELL is match('bash')"
    - "not bash_file.stat.exists"
  file:
    path:  "{{ project_user_dir }}/.bashrc"
    owner: "{{ project_user }}"
    state: touch
    mode:  0644

- name: Insert direnv in .bashrc.
  when: "ansible_env.SHELL is match('bash')"
  lineinfile:
    dest:        "{{ project_user_dir }}/.bashrc"
    line:        'eval "$(direnv hook bash)"'
    regexp:      "direnv hook bash"
    insertafter: "EOF"
    state:       "present"

- name: Create XDG config directory.
  become: yes
  file:
    path:    "{{ project_dir }}/.config/direnv"
    owner:   "{{ project_user }}"
    state:   "directory"
    recurse: yes
  
- name: Create .envrc.
  become:      yes
  template:
    src:   ".envrc.tpl"
    dest:  "{{ project_dir }}/.envrc"
    owner: "{{ project_user }}"
    force: no
    mode:  0644

- name: Insert env in .envrc.
  become:      yes
  become_user: "{{ project_user }}"
  with_items:  "{{ direnv_environment_variables }}"
  lineinfile:
    dest:        "{{ project_dir }}/.envrc"
    line:        "{{ item.value }}"
    regexp:      "{{ item.regexp }}"
    insertafter: EOF
    state:       present

- name: direnv allow.
  become:      yes
  become_user: "{{ project_user }}"
  command: "direnv allow ./"
  args:
    chdir: "{{ project_dir }}"
