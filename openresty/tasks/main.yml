---
- name: user list.
  shell: >
    cut -d: -f1 /etc/passwd  
  register: user_list  
  changed_when: false  
  always_run: yes 
- name: Create openresty user.
  user: >
    name="{{ openresty_user }}"
    shell=/bin/false
    system=yes
    home="{{ openresty_nginx_prefix }}/nginx"
    createhome=no
  when: user_list.stdout_lines.count(openresty_user) < 1 
  become: yes

- name: Install dependent packages.
  yum: >
    name="{{ item }}"
    state="present"
  with_items: "{{ openresty_dependent_packages }}"
  become: yes
  when: openresty_dependent_packages|length > 0

- name: source file.
  stat: >
    path="{{ openresty_src_directory }}/openresty-{{ openresty_version }}.tar.gz"
  register: source_file
  changed_when: no
  always_run: yes
- name: Download openresty source.
  get_url: >
    url="http://openresty.org/download/openresty-{{ openresty_version }}.tar.gz"
    dest="{{ openresty_src_directory }}/openresty-{{ openresty_version }}.tar.gz"
  become: yes
  when: not source_file.stat.exists

- name: source directory.
  stat: >
    path="{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
  register: source_directory
  changed_when: no
  always_run: yes
- name: Extract openresty source.
  unarchive: >
    src="{{ openresty_src_directory }}/openresty-{{ openresty_version }}.tar.gz"
    dest="{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
    copy="no"
  become: yes
  when: not source_directory.stat.exists

- name: Make file.
  stat: >
    path="{{ openresty_src_directory }}/openresty-{{ openresty_version }}/Makefile"
  register: make_file
  changed_when: no
  always_run: yes
- name: Configure openresty source.
  shell: >
    ./configure {{openresty_configure_options}}
  args:
    chdir: "{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
  become: yes
  when: not make_file.stat.exists

- name: Made file.
  stat: >
    path="{{ openresty_src_directory }}/openresty-{{ openresty_version }}/made"
  register: made_file
  changed_when: no
  always_run: yes
- name: Make openresty.
  shell: >
    /usr/bin/make
  args:
    chdir: "{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
  become: yes
  when: not made_file.stat.exists

- name: Touch Maked file.
  file: >
    path={{ openresty_src_directory }}/openresty-{{ openresty_version }}/made
    state=touch
  become: yes
  when: not made_file.stat.exists

- name: Binary file.
  stat: >
    path={{ openresty_nginx_bin_file }}
  register: bin_file
  changed_when: no
  always_run: yes
- name: Install openresty.
  shell: >
    /usr/bin/make install
  args:
    chdir: "{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
  become: yes
  when: not bin_file.stat.exists

- name: Create nginx temp directory.
  file: >
    path="{{ openresty_nginx_tmp_directory }}"
    state=directory
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0755
  become: yes
- name: Create nginx configure sub directory.
  file: >
    path="{{ openresty_nginx_sub_conf_directory }}"
    state=directory
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0755
  become: yes
- name: Create lua directory.
  file: >
    path="{{ openresty_nginx_conf_prefix }}/lua"
    state=directory
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0755
  become: yes

- name: Copy favicon.ico.
  copy: >
    src=favicon.ico
    dest={{ openresty_nginx_prefix }}/html/favicon.ico
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes
- name: Copy 404.html.
  copy: >
    src=404.html
    dest={{ openresty_nginx_prefix }}/html/404.html
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes
- name: Copy 50x.html.
  copy: >
    src=50x.html
    dest={{ openresty_nginx_prefix }}/html/50x.html
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes

- name: Create nginx.conf.
  template: >
    src=nginx.conf.tpl
    dest={{ openresty_nginx_conf_file }}
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes

- name: Create global.conf.
  template: >
    src=nginx.global.conf.tpl
    dest={{ openresty_nginx_sub_conf_directory }}/global.conf
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes
- name: Create http.conf.
  template: >
    src=nginx.http.conf.tpl
    dest={{ openresty_nginx_sub_conf_directory }}/http.conf
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes
- name: Create http.server.conf.
  template: >
    src=nginx.http.server.conf.tpl
    dest={{ openresty_nginx_sub_conf_directory }}/http.server.conf
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes
- name: Create http.lua.conf.
  template: >
    src=nginx.http.lua.conf.tpl
    dest={{ openresty_nginx_sub_conf_directory }}/http.lua.conf
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes
- name: Create http.server.location.conf.
  template: >
    src=nginx.http.server.location.conf.tpl
    dest={{ openresty_nginx_sub_conf_directory }}/http.server.location.conf
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes

- name: Extract resolver.
  shell: >
    grep nameserver /etc/resolv.conf | awk '{print $2}'
  register: resolver
- name: Replace nginx http server resolver.
  replace: >
    dest="{{ openresty_nginx_sub_conf_directory }}/http.conf"
    replace="    resolver           {{ resolver.stdout }};"
    regexp='^(\s+resolver\s+).+;'
  become: yes

- name: Copy current_time.lua.
  copy: >
    src=current_time.lua
    dest={{ openresty_nginx_conf_prefix }}/lua/current_time.lua
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0644
  become: yes

- name: Change html directory owner.
  file: >
    path="{{ openresty_nginx_prefix }}/html"
    state=directory
    recurse=yes
    owner={{ openresty_user }}
    group={{ openresty_user }}
  become: yes
- name: Change conf directory owner.
  file: >
    path={{ openresty_nginx_conf_prefix }}
    state=directory
    recurse=yes
    owner={{ openresty_user }}
    group={{ openresty_user }}
  become: yes

- name: Create nginx service file.
  template: >
    src=nginx.service.tpl
    dest="{{ openresty_nginx_service_file }}"
    owner="{{ openresty_user }}"
    group="{{ openresty_user }}"
    mode=0755
  become: yes
- name: Register nginx service.
  service: >
    name=nginx
    enabled=yes
  become: yes
