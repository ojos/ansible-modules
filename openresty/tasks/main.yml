---
- name: Create nginx user.
  user: >
    name="{{ openresty_user }}"
    shell=/bin/false
    system=yes
    home="{{ openresty_prefix_directory }}/nginx"
    createhome=no
  become: yes
  ignore_errors: yes

- name: Install dependent packages.
  yum: >
    name="{{ item }}"
    state="present"
  with_items: "{{ openresty_dependent_packages }}"
  become: yes

- name: source file.
  stat: >
    path="{{ openresty_src_directory }}/openresty-{{ openresty_version }}.tar.gz"
  register: source_file
  changed_when: no
  always_run: yes
- name: Download openresty source.
  get_url: >
    url="http://openresty.org/download/openresty-{{ openresty_version }}.tar.gz"
    dest="{{ openresty_src_directory }}/openresty-{{ openresty_version }}.tar.gz"
  become: yes
  when: not source_file.stat.exists

- name: source directory.
  stat: >
    path="{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
  register: source_directory
  changed_when: no
  always_run: yes
- name: Extract openresty source.
  unarchive: >
    src="{{ openresty_src_directory }}/openresty-{{ openresty_version }}.tar.gz"
    dest="{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
    copy="no"
  become: yes
  when: not source_directory.stat.exists

- name: Configure openresty source.
  shell: >
    ./configure {{openresty_configure_options}}
  args:
    chdir: "{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
  become: yes
# - name: Make openresty.
#   shell: >
#     /usr/bin/make
#   args:
#     chdir: "{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
#   become: yes
# - name: Install openresty.
#   shell: >
#     /usr/bin/make install
#   args:
#     chdir: "{{ openresty_src_directory }}/openresty-{{ openresty_version }}"
#   become: yes

# - name: Create nginx temp directory.
#   file: >
#     path="{{ openresty_nginx_tmp_directory }}"
#     state=directory
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0755
#   become: yes

# - name: Copy favicon.ico.
#   copy: >
#     src=favicon.ico
#     dest={{ openresty_prefix_directory }}/nginx/html/favicon.ico
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Copy 404.html.
#   copy: >
#     src=404.html
#     dest={{ openresty_prefix_directory }}/nginx/html/404.html
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Copy 50x.html.
#   copy: >
#     src=50x.html
#     dest={{ openresty_prefix_directory }}/nginx/html/50x.html
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Create nginx.conf.
#   template: >
#     src=nginx.conf.tpl
#     dest={{ openresty_nginx_conf_file }}
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Create nginx configure sub directory.
#   file: >
#     path="{{ openresty_nginx_sub_conf_directory }}"
#     state=directory
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0755
# - name: Create global.conf.
#   template: >
#     src=nginx.global.conf.tpl
#     dest={{ openresty_nginx_sub_conf_directory }}/global.conf
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Create http.conf.
#   template: >
#     src=nginx.http.conf.tpl
#     dest={{ openresty_nginx_sub_conf_directory }}/http.conf
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Extract resolver.
#   shell: "grep nameserver /etc/resolv.conf | awk '{print $2}'"
#   register: openresty_extract_resolver
# - name: Replace nginx http server resolver.
#   replace: >
#     dest="{{ openresty_nginx_sub_conf_directory }}/http.conf"
#     regexp='^(\s+resolver\s+).+;'
#     replace="    resolver           {{ openresty_extract_resolver['stdout'] }};"
# - name: Create http.server.conf.
#   template: >
#     src=nginx.http.server.conf.tpl
#     dest={{ openresty_nginx_sub_conf_directory }}/http.server.conf
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Create http.lua.conf.
#   template: >
#     src=nginx.http.lua.conf.tpl
#     dest={{ openresty_nginx_sub_conf_directory }}/http.lua.conf
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Create http.server.location.conf.
#   template: >
#     src=nginx.http.server.location.conf.tpl
#     dest={{ openresty_nginx_sub_conf_directory }}/http.server.location.conf
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Create lua directory.
#   file: >
#     path="{{ openresty_nginx_conf_directory }}/lua"
#     state=directory
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0755
# - name: Copy current_time.lua.
#   copy: >
#     src=current_time.lua
#     dest={{ openresty_nginx_conf_directory }}/lua/current_time.lua
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0644
# - name: Create nginx service file.
#   template: >
#     src=nginx.service.tpl
#     dest="{{ openresty_nginx_service_file }}"
#     owner="{{ openresty_user }}"
#     group="{{ openresty_group }}"
#     mode=0755
# - name: Register nginx service.
#   service: >
#     name=nginx
#     enabled=yes
