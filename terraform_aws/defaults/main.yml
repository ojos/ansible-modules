---
  terraform_aws_directory: "{{ terraform_directory }}/aws"
  terraform_aws_user: "{{ terraform_user }}"
  terraform_aws_group: "{{ terraform_group }}"
  terraform_aws_environments: "{{ project_environments }}"
  terraform_aws_skel_repository: "https://github.com/ojos/terraform-aws.git"
  terraform_aws_project_owner: "$PROJECT_OWNER"
  terraform_aws_access_key_id: "$AWS_ACCESS_KEY_ID"
  terraform_aws_secret_access_key: "$AWS_SECRET_ACCESS_KEY"
  terraform_aws_region: "$AWS_DEFAULT_REGION"
  terraform_aws_availability_zone: "$AWS_DEFAULT_AVAILABILITY_ZONE"
  terraform_aws_security_group: "$AWS_DEFAULT_SECURITY_GROUP"
  terraform_aws_subnet_id: "$AWS_DEFAULT_SUBNET_ID"
  terraform_aws_vpc_id: "$AWS_DEFAULT_VPC_ID"
  terraform_aws_username: "$AWS_DEFAULT_USERNAME"
  terraform_aws_instance_type: "$AWS_DEFAULT_INSTANCE_TYPE"
  terraform_aws_ec2_ami: "$AWS_DEFAULT_EC2_AMI"
  terraform_aws_environment_templates:
    - environment: vagrant
      providers:
        - ec2
        - s3
        - vpc_security_group
    - environment: develop
      providers:
        - ec2
        - elasitccache
        - elb
        - rds
        - route53
        - s3
        - vpc
        - vpc_security_group
    - environment: staging
      providers:
        - ec2
        - elasitccache
        - elb
        - rds
        - route53
        - s3
        - vpc
        - vpc_security_group
    - environment: production
      providers:
        - autoscaling
        - ec2
        - elasticache
        - elb
        - rds_cluster
        - route53
        - s3
        - vpc
        - vpc_security_group
  terraform_aws_envrc_directory: "{{ terraform_envrc_directory }}"
  terraform_aws_environment_variables: 
    - value: "# terraform-aws"
      regexp: "^# terraform-aws$"
    - value: "export TF_VAR_owner={{ project_owner }}"
      regexp: "^export TF_VAR_owner"
    - value: "export TF_VAR_aws_access_key_id={{ terraform_aws_access_key_id }}"
      regexp: "^export TF_VAR_aws_access_key_id"
    - value: "export TF_VAR_aws_secret_access_key={{ terraform_aws_secret_access_key }}"
      regexp: "^export TF_VAR_aws_secret_access_key"
    - value: "export TF_VAR_aws_default_region={{ terraform_aws_region }}"
      regexp: "^export TF_VAR_aws_default_region"
    - value: "export TF_VAR_aws_default_availability_zone={{ terraform_aws_availability_zone }}"
      regexp: "^export TF_VAR_aws_default_availability_zone"
    - value: "export TF_VAR_aws_default_security_group={{ terraform_aws_security_group }}"
      regexp: "^export TF_VAR_aws_default_security_group"
    - value: "export TF_VAR_aws_default_subnet_id={{ terraform_aws_subnet_id }}"
      regexp: "^export TF_VAR_aws_default_subnet_id"
    - value: "export TF_VAR_aws_default_vpc_id={{ terraform_aws_vpc_id }}"
      regexp: "^export TF_VAR_aws_default_vpc_id"
    - value: "export TF_VAR_aws_default_username={{ terraform_aws_username }}"
      regexp: "^export TF_VAR_aws_default_username"
    - value: "export TF_VAR_aws_default_instance_type={{ terraform_aws_instance_type }}"
      regexp: "^export TF_VAR_aws_default_instance_type"
    - value: |
        export TF_VAR_aws_default_ec2_ami={{ terraform_aws_ec2_ami }}

      regexp: "^export TF_VAR_aws_default_ec2_ami"


