---
  packer_aws_user: "{{ packer_user }}"
  packer_aws_group: "{{ packer_group }}"
  packer_aws_envrc_directory: "{{ packer_envrc_directory }}"
  packer_aws_ebs_file: "{{ packer_directory }}/amazon_ebs.json"
  packer_aws_ami: "$AWS_DEFAULT_EC2_AMI"
  packer_aws_instance_type: "$AWS_DEFAULT_INSTANCE_TYPE"
  packer_aws_subnet_id: "$AWS_DEFAULT_SUBNET_ID"
  packer_aws_security_group: "$AWS_DEFAULT_SECURITY_GROUP"
  packer_aws_username: "$AWS_DEFAULT_USERNAME"
  packer_aws_staging_directory: /tmp/ansible-local
  packer_aws_roles_source: "$ANSIBLE_ROLES_PATH"
  packer_aws_roles_directory: "$PACKER_ANSIBLE_STAGING_DIRECTORY/roles"
  packer_aws_playbook: "$ANSIBLE_HOME/{{ xbuild_ansible_buildout_playbook_file_name }}"
  packer_aws_environment_variables: 
    - value: "# packer_aws"
      regexp: "^# packer_aws$"
    - value: "export PACKER_AWS_AMI={{ packer_aws_ami }}"
      regexp: "^export PACKER_AWS_AMI"
    - value: "export PACKER_AWS_INSTANCE_TYPE={{ packer_aws_instance_type }}"
      regexp: "^export PACKER_AWS_INSTANCE_TYPE"
    - value: "export PACKER_AWS_SUBNET_ID={{ packer_aws_subnet_id }}"
      regexp: "^export PACKER_AWS_SUBNET_ID"
    - value: "export PACKER_AWS_SECURITY_GROUP={{ packer_aws_security_group }}"
      regexp: "^export PACKER_AWS_SECURITY_GROUP"
    - value: "export PACKER_AWS_USERNAME={{ packer_aws_username }}"
      regexp: "^export PACKER_AWS_USERNAME"
    - value: "export PACKER_ANSIBLE_STAGING_DIRECTORY={{ packer_aws_staging_directory }}"
      regexp: "^export PACKER_ANSIBLE_STAGING_DIRECTORY"
    - value: "export PACKER_ANSIBLE_ROLES_SOURCE={{ packer_aws_roles_source }}"
      regexp: "^export PACKER_ANSIBLE_ROLES_SOURCE"
    - value: "export PACKER_ANSIBLE_ROLES_DIRECTORY={{ packer_aws_roles_directory }}"
      regexp: "^export PACKER_ANSIBLE_ROLES_DIRECTORY"
    - value: |
        export PACKER_PLAYBOOK={{ packer_aws_playbook }}

      regexp: "^export PACKER_PLAYBOOK"