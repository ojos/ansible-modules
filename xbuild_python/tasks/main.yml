---
- name: Install dependent packages(RedHat).
  yum: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
  with_items: xbuild_python_dependent_packages
  when: ansible_os_family == 'RedHat' and xbuild_python_dependent_packages|length > 0
- name: Install dependent packages(Darwin).
  homebrew: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
    install_options={{ item.install_option | default('') }}
  with_items: xbuild_python_dependent_packages
  when: ansible_os_family == 'Darwin' and xbuild_python_dependent_packages|length > 0

- name: Python directory.
  stat: >
    path={{ xbuild_python_install_directory }}
  register: python_dir
  changed_when: no
  always_run: yes
- name: Install python in xbuild.
  command: >
    {{ xbuild_install_directory }}/python-install {{ xbuild_python_version }}
    {{ xbuild_python_install_directory }}
  when: not python_dir.stat.exists
- name: Change python directory owner.
  file: >
    path={{ xbuild_python_install_directory }}
    state=directory
    recurse=yes
    owner={{ xbuild_python_user }}
    group={{ xbuild_python_group }}
  become: yes

- name: Remove xbuild directory.
  file: >
    path={{ xbuild_install_directory }}
    state=absent
  when: xbuild_python_remove_xbuild

# - name: envrc directory.
#   stat: >
#     path="{{ xbuild_python_envrc_directory }}"
#   register: rc_file
#   when: xbuild_python_envrc_directory != ''

# - name: Create Resource File.
#   file: >
#     state=touch
#     path={{ xbuild_python_resource_file }}
#     owner={{ xbuild_python_user }}
#     group={{ xbuild_python_user }}
#     mode=0644
#   when: xbuild_python_resource_file != '' and not rc_file.stat.exists

- name: Insert python bin Path.
  lineinfile: >
    dest={{ direnv_envrc_directory }}/.envrc
    line="export PATH={{ xbuild_python_bin_directory }}:$PATH"
    insertafter=EOF
    state=present
    regexp="{{ xbuild_python_bin_regexp }}\:\$PATH"
  when: when: direnv_envrc_directory != ''

- name: Install python packages.
  pip: >
    name={{ item }}
    state=latest
  with_items: xbuild_python_packages
  when: xbuild_python_packages|length > 0
  environment:
    PATH: "{{ xbuild_python_install_directory }}/bin:{{ ansible_env.PATH }}"


