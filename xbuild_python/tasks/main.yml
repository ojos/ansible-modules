---
- name: Install dependent packages(RedHat).
  yum: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
  become: yes
  with_items: "{{ xbuild_python_dependent_packages }}"
  when: ansible_os_family == 'RedHat' and xbuild_python_dependent_packages|length > 0
- name: Install dependent packages(Darwin).
  homebrew: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
    install_options={{ item.install_option | default('') }}
  with_items: "{{ xbuild_python_dependent_packages }}"
  when: ansible_os_family == 'Darwin' and xbuild_python_dependent_packages|length > 0

- name: Python directory.
  stat: >
    path={{ xbuild_python_install_directory }}
  register: python_directory
  changed_when: no
  check_mode: no
- name: Install python in xbuild.
  command: >
    {{ xbuild_install_directory }}/python-install {{ xbuild_python_version }}
    {{ xbuild_python_install_directory }}
  when: not python_directory.stat.exists
  become: yes

- name: Install python packages.
  pip: >
    name={{ item.name | default(item) }}
    version={{ item.version | default(omit) }}
    state=latest
    executable={{ xbuild_python_install_directory }}/bin/pip
  with_items: "{{ xbuild_python_packages }}"
  when: xbuild_python_packages|length > 0
  become: yes

- name: Change python directory owner.
  file: >
    path={{ xbuild_python_install_directory }}
    state=directory
    recurse=yes
    owner={{ xbuild_python_user }}
    group={{ xbuild_python_group }}
  become: yes

- name: Insert env in .envrc.
  lineinfile: >
    dest={{ xbuild_python_envrc_directory }}/.envrc
    line="{{ item.value }}"
    insertafter=EOF
    state=present
    regexp={{ item.regexp }}
  with_items: "{{ xbuild_python_environment_variables }}"
  when: xbuild_python_envrc_directory != '' and xbuild_python_environment_variables|length > 0

- name: Remove xbuild directory.
  file: >
    path={{ xbuild_install_directory }}
    state=absent
  when: xbuild_python_remove_xbuild
  become: yes
