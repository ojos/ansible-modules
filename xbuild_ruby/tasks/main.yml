---
- name: Install dependent packages(RedHat).
  yum: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
  become: yes
  with_items: "{{ xbuild_ruby_dependent_packages }}"
  when: ansible_os_family == 'RedHat' and xbuild_ruby_dependent_packages|length > 0
- name: Install dependent packages(Darwin).
  homebrew: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
    install_options={{ item.install_option | default('') }}
  with_items: "{{ xbuild_ruby_dependent_packages }}"
  when: ansible_os_family == 'Darwin' and xbuild_ruby_dependent_packages|length > 0

# - name: Ruby directory.
#   stat: >
#     path={{ xbuild_ruby_install_directory }}
#   register: ruby_directory
#   changed_when: no
#   always_run: yes
# - name: Install ruby in xbuild.
#   command: >
#     {{ xbuild_install_directory }}/ruby-install {{ xbuild_ruby_version }}
#     {{ xbuild_ruby_install_directory }}
#   when: not ruby_directory.stat.exists
#   become: yes

- name: Install ruby packages.
  gem: >
    name={{ item }}
    state=latest
  executable: "{{ xbuild_ruby_install_directory }}/bin/gem"
  with_items: "{{ xbuild_ruby_packages }}"
  when: xbuild_ruby_packages|length > 0
  become: yes

- name: Update ruby gems.
  command: >
    update_rubygems
  environment:
    PATH: "{{ xbuild_ruby_install_directory }}/bin:{{ ansible_env.PATH }}"
  become: yes

- name: Change ruby directory owner.
  file: >
    path={{ xbuild_ruby_install_directory }}
    state=directory
    recurse=yes
    owner={{ xbuild_ruby_user }}
    group={{ xbuild_ruby_group }}
  become: yes

- name: Insert env in .envrc.
  lineinfile: >
    dest={{ xbuild_ruby_envrc_directory }}/.envrc
    line="{{ item.value }}"
    insertafter=EOF
    state=present
    regexp={{ item.regexp }}
  with_items: "{{ xbuild_ruby_environment_variables }}"
  when: xbuild_ruby_envrc_directory != '' and xbuild_ruby_environment_variables|length > 0

- name: Remove xbuild directory.
  file: >
    path={{ xbuild_install_directory }}
    state=absent
  when: xbuild_ruby_remove_xbuild
  become: yes
